{"pageProps":{"note":{"id":"954ui8ssdzn50me68v9qv54","title":"Message Renderer","desc":"","updated":1746645835862,"created":1745503917488,"custom":{},"fname":"SP.Message Renderer","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"02664e391a0416af7db6a9bc0b7a06bf","links":[],"anchors":{"design":{"type":"header","text":"Design","value":"design","line":7,"column":0,"depth":2},"spmessage-rendererstep-1--15-weeks":{"type":"header","text":"SP.Message Renderer.Step 1- 1.5 weeks","value":"spmessage-rendererstep-1--15-weeks","line":9,"column":0,"depth":3},"step-2---1-week":{"type":"header","text":"Step 2 - 1 week","value":"step-2---1-week","line":15,"column":0,"depth":3},"step-3---2-weeks":{"type":"header","text":"Step 3 - 2 weeks","value":"step-3---2-weeks","line":21,"column":0,"depth":3},"step-4----weeks":{"type":"header","text":"Step 4 - ? weeks","value":"step-4----weeks","line":25,"column":0,"depth":3},"setting-expectations":{"type":"header","text":"Setting expectations","value":"setting-expectations","line":29,"column":0,"depth":3},"milestone-planning":{"type":"header","text":"Milestone planning","value":"milestone-planning","line":40,"column":0,"depth":3},"maintenance":{"type":"header","text":"Maintenance","value":"maintenance","line":46,"column":0,"depth":3}},"children":["j2o2nxc1xp89rdhyg323cdk"],"parent":"l1lcmphk4ubvu1aiqhcs7ib","data":{}},"body":"<h1 id=\"message-renderer\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#message-renderer\"></a>Message Renderer</h1>\n<h2 id=\"design\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#design\"></a>Design</h2>\n<h3 id=\"spmessage-rendererstep-1--15-weeks\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#spmessage-rendererstep-1--15-weeks\"></a>SP.Message Renderer.Step 1- <em>1.5 weeks</em></h3>\n<p>The general idea here would be to create a RAG based system, where in we store the <code>messageJSON</code> along with some <code>metadata</code>(description of the messageJSON) in a vector database and then test the validity of the retrival and generation capabilites of the LLM.</p>\n<p>This step won't have an interactive experience like that of an assistant. It will <em>only</em> have the core functionality of outputting a <code>msgJSON</code> given a prompt. It will be a CLI tool that one can run locally.</p>\n<h3 id=\"step-2---1-week\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#step-2---1-week\"></a>Step 2 - <em>1 week</em></h3>\n<p>During this week we will build out an evaluation systems where we will take 20 msgJSONs from the system that we create ourselves using a <code>prompt</code> and then we will provide the same prompt to the LLM and test the validity of the results. </p>\n<blockquote>\n<p>Based on what we find, we will increase the number of examples of msgJSONs our vector database or pivot to a different approach like <code>fineTuning</code>. If we find that we might need to rethink the structure of the <code>msgJSON</code> to better leverage the LLMs abilities to <em>only</em> alter the <strong>style</strong> and <strong>text</strong> of the message, we might have to re-think the <code>messageJSON</code> structure and change the way the rendering application works to accommodate for this change in structure - <strong>PIVOT CAN TAKE UPTO 3 WEEKS</strong></p>\n</blockquote>\n<h3 id=\"step-3---2-weeks\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#step-3---2-weeks\"></a>Step 3 - <em>2 weeks</em></h3>\n<p>Assuming that the RAG approach works, we will then build out an assistant type experience to generate the <code>msgJSON</code>. This <em>may</em> entail building out a service that can maintain conversation context / state so multiple clients can interact with it. We <em>may</em> implement streaming responses using OpenAI's streaming API.</p>\n<h3 id=\"step-4----weeks\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#step-4----weeks\"></a>Step 4 - <em>? weeks</em></h3>\n<p>We will then build out the front-end integrations within portal to integrate with this message rendering service. The integration will be a chat like experience where in you can have a conversation with an \"agent\" to build you a message. </p>\n<h3 id=\"setting-expectations\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#setting-expectations\"></a>Setting expectations</h3>\n<ul>\n<li>\n<p>What percentage of customer messages do you want the AI renderer to automate?</p>\n</li>\n<li>\n<p>How much quicker are customers able to setup messages?</p>\n</li>\n<li>\n<p>How much human labor does the chatbot save?</p>\n</li>\n<li>\n<p>What is the customer sentiment and feedback for this system?</p>\n</li>\n</ul>\n<h3 id=\"milestone-planning\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#milestone-planning\"></a>Milestone planning</h3>\n<ul>\n<li>\n<p>End customer review of message quality</p>\n</li>\n<li>\n<p>Cost: how much it costs / inference</p>\n</li>\n</ul>\n<h3 id=\"maintenance\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#maintenance\"></a>Maintenance</h3>\n<hr>\n<strong>Children</strong>\n<ol>\n<li><a href=\"/dendron-main/notes/j2o2nxc1xp89rdhyg323cdk\">Step 1</a></li>\n</ol>","noteIndex":{"id":"root","title":"root","desc":"","updated":1746040151076,"created":1595961348801,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"3338f3f44ea53fff248fd70b6ad85170","links":[],"anchors":{},"children":["oz8e6a05bjgd3cbtru3hqe2","c1bs7wsjfbhb0zipaywqv1","3x4fmd16chquma6kovvfatj","gdjyzsq56qgyj5t5uktrsgu","69h59jt3vyfdg55g7gqc95d","wz9z8az9m9aq5132p7d10co","l1lcmphk4ubvu1aiqhcs7ib","bd3mupfj68nrgnjejss1qqh","1tlnuf6o2f3qawzg799ilzk","z5mfdumpr0cv3ceh60flq8n","filwymswyiwdojrwinvy5xd"],"parent":null,"data":{},"body":"\nSiddharth's root\n\nThis vault contains all the verticals to climb."},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Dendron"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false,"enableHandlebarTemplates":true,"enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableMermaid":true},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://sid1081.github.io","assetsPrefix":"/dendron-main","enableMermaid":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}